apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.shazam.fork'
//apply plugin: 'spoon'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.gmail.fattazzo.formula1world"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 27
        versionName "2.7"
        setProperty("archivesBaseName", "Total-GP-world")

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    sourceSets {
        main.java.srcDirs += "src/main/kotlin"
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
    testOptions {
        animationsDisabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = outputFile.name
                        .replace("app","${defaultConfig.getProperties()["archivesBaseName"]}")
                        .replace("-release","-${defaultConfig.versionName}")
                outputFileName = fileName

            }

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

afterEvaluate {
    android.sourceSets.all { sourceSet ->
        if (!sourceSet.name.startsWith('test') || !sourceSet.name.startsWith('androidTest')) {
            sourceSet.kotlin.setSrcDirs([])
        }
    }
}


// Align test resources folder ------------------------------------------
task cleanTestResources(type: Delete) {
    delete 'src/test/resources/assets'
}

task copyAssetsTestFiles(type: Copy, dependsOn: 'cleanTestResources') {
    from 'src/main/assets'
    into 'src/test/resources/assets'
}


preBuild.dependsOn copyAssetsTestFiles
preBuild.mustRunAfter copyAssetsTestFiles

clean.dependsOn copyAssetsTestFiles
clean.mustRunAfter copyAssetsTestFiles
// ----------------------------------------------------------------------

kapt {
    correctErrorTypes = true
}

//spoon {
//    debug = false
//    baseOutputDir = new File("app/build/spoon/" + new Date().format("yyyyMMdd-HH:mm", TimeZone.getTimeZone("UTC")))
//}

fork {
    testPackage = "com.gmail.fattazzo.formula1world.fragments.current.drivers.detail"
    title = "Total-GP-world tests"
    baseOutputDir = new File("app/build/reports/fork/" + new Date().format("yyyyMMdd-HH:mm", TimeZone.getTimeZone("UTC")))
    testOutputTimeout = 1000000
}

def AAVersion = "4.3.1"

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //implementation(name:'library-debug', ext:'aar')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    kapt "org.androidannotations:androidannotations:$AAVersion"
    implementation "org.androidannotations:androidannotations-api:$AAVersion"

    implementation 'com.michaelpardo:activeandroid:3.1.0-SNAPSHOT'

    implementation 'com.google.code.gson:gson:2.8.0'

    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'org.apache.commons:commons-collections4:4.1'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'

    implementation "com.android.support:appcompat-v7:$buildToolsVersion"
    implementation "com.android.support:support-v4:$buildToolsVersion"
    implementation "com.android.support:design:$buildToolsVersion"
    implementation "com.android.support:cardview-v7:$buildToolsVersion"
    implementation "com.android.support:recyclerview-v7:$buildToolsVersion"
    implementation "com.android.support:gridlayout-v7:$buildToolsVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.1.2'

    implementation 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'

    implementation 'org.jsoup:jsoup:1.10.3'

    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'

    implementation 'com.yarolegovich:lovely-dialog:1.1.0'

    implementation 'com.appyvet:materialrangebar:1.3'

    implementation ('com.squareup.picasso:picasso:2.71828',{
        exclude group: 'com.android.support', module: 'exifinterface'
    })

    implementation 'com.github.fattazzo:android-about-library:0.5.2'

    //------------------ TEST --------------------------------
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.5'
    testImplementation('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
    androidTestImplementation('com.android.support.test.espresso:espresso-contrib:2.2.2') {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
        exclude module: 'support-v13'
        exclude module: 'recyclerview-v7'
        exclude module: 'design'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-web:2.2.2') {
        exclude module: 'support-annotations'
    }
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestImplementation 'com.squareup.spoon:spoon-client:1.7.1'
}
repositories {
    mavenCentral()

    // ActiveAndroid
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    google()

    //flatDir {
    //    dirs 'libs'
    //}
}
